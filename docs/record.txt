11. 强化学习五子棋
	参考文献：https://www.doc88.com/p-57516985322644.html?r=1
	马尔可夫理论简述：https://zhuanlan.zhihu.com/p/139539307
	蒙特卡洛树理论简述：https://zhuanlan.zhihu.com/p/53948964
	代码实现：https://blog.csdn.net/weixin_43442778/article/details/114950912
		https://zhuanlan.zhihu.com/p/59567014
	s. 网络太小【OK】
	t. 参考第三方代码进行流程分析（数据集生成问题、蒙特卡洛关键步骤）【OK】
	u. 训练数据三类数据的位置是交替的（utils.transfer_to_input）【这个其实不是交替的，是三个通道，其中根据当前player的不同生成的数据是不同的，第三个通道是1(player1)或0(player2)、第二个通道是己方落子置1、第三个通道是对方落子置1】；
	    每模拟了一个节点，则其下属节点全部展开（new_MCTS.simulation.for move in valid_move）；		    temperature = 1，Cpuct = 0.1；
	    回传时候，胜负决定时候，不管黑棋白棋哪个赢，都回传1；
	    回传的时候是v、-v交替进行；
	    每次实际落子后，不会清空整个树，而是会选择所落子的节点，并将其父节点置空；
	    一次模拟后，重置的是棋盘状态、不动树，将棋盘和树分离、并且棋盘状态由两个变量记录：模拟棋盘、正式棋盘；
	    在每次实际落子时，通过n计算的概率分布只占0.8的比重，还有0.2的比重是由一个迪利克雷分布产生，另外，在训练阶段，依据最终的概率分布进行抽样后落子，在最终对弈阶段，则直接选择通过n计算的概率的最大值的落子；
	    在生成用于训练网络的数据时，v在黑子执手的时候为1、在白子执手的时候为-1，也就是说，不是根据这盘棋的结局定一个统一的1或-1，而是每一步的v都不一样（交替出现）；
	    在定义网络的训练数据时，采用一个缓存队列进行，例如队列中最多只允许存储1000的棋步，且训练时候进行打乱顺序；
	    在进行训练的时候，对于输入，采用Variable进行包装，用于也对输入数据求解梯度？
	    训练的时候是每100盘棋谱进行5epoch的训练；
	    在与人进行对弈时，同样完整维护一个树，人落子后，直接步进到对应节点状态，同时将父指针置空，在该节点进行模拟后进行落子、步进到对应节点；